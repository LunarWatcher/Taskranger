# Defines a CI workflow
name: Release binaries

# ... which is run when:
on:
  # ... a release is created.
  push:
    tags: 
      - 'v*'

# When the trigger conditions are met, run the jobs
jobs:
  # This job installs the base dependencies.
  build:
    # Contains the build matrix, and yes, it's a bit of a clusterfuck
    strategy:
      matrix:
        # Config: contains the system setup. 
        config: 
          - clang++-9-ubuntu
          - clang++-11-macos
          - msvc-bundled-windows

        include:
          # This contains the actual definition of usable stuff for each configuration.
          # This can also include packages in the future, if I can find out 
          # how GH Actions "if" works. /shrug
          - config: clang++-9-ubuntu
            os: ubuntu-latest
            compiler: clang++-9
            ccompiler: clang-9
            folder: clang.posix
            binname: linux
            ext: ''
          - config: clang++-11-macos
            os: macos-latest
            compiler: clang++
            ccompiler: clang
            folder: clang.darwin
            binname: mac
            ext: ''
          - config: msvc-bundled-windows
            os: windows-latest
            compiler: cl
            ccompiler: cl
            folder: msvc.win32
            binname: windows
            ext: .exe
    # The OS to run on
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    # Set up python; requires for SCons and Conan
    - uses: actions/setup-python@v2
    - name: Set env
      if: matrix.os != 'windows-latest'
      run: |
        echo "::set-env name=CXX::${{ matrix.compiler }}"
        echo "::set-env name=CC::${{ matrix.ccompiler }}"
        ${{ matrix.compiler }} --version
    - name: Set type
      id: release_type
      run: |
        echo "::set-output name=isRelease::${{ !endsWith(github.ref, 'a') }}"
    # Install conan
    - uses: LunarWatcher/install-conan@master
    # Install SCons
    - name: Install dependencies
      run: |
        python -m pip install scons
    - name: Build release
      run: |
        scons debug=False
    # This is currently not supported. Stored for future use:
    # prerelease: ${{ steps.release_type.outputs.isRelease }}
    - name: Upload assets
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./build/${{ matrix.folder }}.64bit.release/src/bin/taskranger
        asset_name: taskranger-${{ matrix.binname }}-x64${{ matrix.ext }}
        tag: ${{ github.ref }}
